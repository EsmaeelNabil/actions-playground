name: Deploy to Playstore

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - production
          - staging
          - uat
      backend_baseurl:
        description: 'Backend base URL'
        required: false
        type: string
      host:
        description: 'Host URL'
        required: false
        type: string
      client_id:
        description: 'Client ID'
        required: false
        type: string
      version_name:
        description: 'Version name'
        required: true
        default: '1.0.0'
        type: string
      version_code:
        description: 'Version code'
        required: true
        default: '1'
        type: string

env:
#   KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
#   KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#   PLAYSTORE_JSON: ${{ secrets.PLAYSTORE_JSON }}
#   POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
#   POSTHOG_URL: ${{ secrets.POSTHOG_URL }}
#   SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
#   SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#   APP_SPECTOR_API_KEY: ${{ secrets.APP_SPECTOR_API_KEY }}
#   APP_SPECTOR_ENCRYPTION_KEY: ${{ secrets.APP_SPECTOR_ENCRYPTION_KEY }}
  
  # Dynamic environment variables based on selected environment
  THERMONDO_PRODUCTION_BACKEND_BASEURL: ${{ inputs.environment == 'production' && inputs.backend_baseurl || '' }}
  THERMONDO_STAGING_BACKEND_BASEURL: ${{ inputs.environment == 'staging' && inputs.backend_baseurl || '' }}
  THERMONDO_UAT_BACKEND_BASEURL: ${{ inputs.environment == 'uat' && inputs.backend_baseurl || '' }}
        
  PRODUCTION_HOST: ${{ inputs.environment == 'production' && inputs.host || '' }}
  STAGING_HOST: ${{ inputs.environment == 'staging' && inputs.host || '' }}
  UAT_HOST: ${{ inputs.environment == 'uat' && inputs.host || '' }}
        
  PRODUCTION_CLIENT_ID: ${{ inputs.environment == 'production' && inputs.client_id || '' }}
  STAGING_CLIENT_ID: ${{ inputs.environment == 'staging' && inputs.client_id || '' }}
  UAT_CLIENT_ID: ${{ inputs.environment == 'uat' && inputs.client_id || '' }}
        

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
    manaul:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          run: |
            echo "${{ inputs.THERMONDO_PRODUCTION_BACKEND_BASEURL}}"
            echo "${{ inputs.THERMONDO_PRODUCTION_BACKEND_BASEURL }}"
            echo "${{ inputs.THERMONDO_STAGING_BACKEND_BASEURL }}"
            echo "${{ inputs.THERMONDO_UAT_BACKEND_BASEURL }}"
            echo "${{ inputs.PRODUCTION_HOST }}"
            echo "${{ inputs.STAGING_HOST }}"
            echo "${{ inputs.UAT_HOST }}"
            echo "${{ inputs.PRODUCTION_CLIENT_ID }}"
            echo "${{ inputs.STAGING_CLIENT_ID }}"
            echo "${{ inputs.UAT_CLIENT_ID }}"
  

            
#   deploy:
#     name: Deploy to Playstore
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#     timeout-minutes: 90

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#         with:
#           submodules: true
#           ssh-key: ${{ secrets.SSH_KEY }}
#           ref: ${{ github.event.pull_request.head.ref }}
#           fetch-depth: 0

#       - name: setup JDK
#         uses: actions/setup-java@v4
#         with:
#           distribution: "temurin"
#           java-version: "17"

#       - name: Setup gradle
#         uses: gradle/actions/setup-gradle@v4
#         with:
#           cache-read-only: false

#       - name: Validate Gradle Wrapper
#         uses: gradle/actions/wrapper-validation@v4

#       - name: Cache and Restore BuildCache
#         uses: actions/cache@v4
#         with:
#           path: "**/build-cache/**"
#           key: build-${{ github.sha }}
#           restore-keys: |
#             build-${{ github.sha }}
#             build-

#       - name: Set Version Name
#         run: echo "VERSION=$(./scripts/get-latest-release-version.sh)" >> $GITHUB_ENV

#       - name: Build all build type and flavor permutations
#         run: ./gradlew publishReleaseBundle
